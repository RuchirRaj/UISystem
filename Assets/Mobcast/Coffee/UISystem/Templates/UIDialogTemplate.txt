using UnityEngine;
using UnityEngine.UI;
using System.Collections;
using System.Collections.Generic;
using Mobcast.Coffee.UI;

/// <summary>
/// #SCRIPTNAME#
/// </summary>
public class #SCRIPTNAME# : UIDialog
{
	/// <summary>
	/// Implement this property to indicate whether UI is poolable.
	/// </summary>
	public override bool isPoolable { get { return base.isPoolable; } }

	/// <summary>
	/// Argument.
	/// </summary>
	public class Argument : UIArgument
	{
	}

	/// <summary>
	/// This function is called when the UI starts showing.
	/// Implement this function to show UI with animation.
	/// </summary>
	public override IEnumerator OnShow()
	{
		yield return base.OnShow();
	}

	/// <summary>
	/// This function is called when the UI starts hiding.
	/// Implement this function to hide UI with animation.
	/// </summary>
	public override IEnumerator OnHide()
	{
		yield return base.OnHide();
	}

	/// <summary>
	/// This function is called when the UI instance is being loaded, and only once during the lifetime of the instance.
	/// Implement this function to initialize UI.
	/// </summary>
	public override IEnumerator OnInitialize()
	{
		yield return base.OnInitialize();
	}

	/// <summary>
	/// This function is called when the MonoBehaviour will be destroyed or be pooled.
	/// Implement this function to finalize UI.
	/// </summary>
	public override IEnumerator OnFinalize()
	{
		yield return base.OnFinalize();
	}
}
